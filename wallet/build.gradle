apply plugin: 'com.android.application'
apply plugin: 'androidsvgdrawable'

def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
repositories {
    maven { url localMavenRepo }

    dependencies {
        compile(project(':integration-android')) {
            exclude(group: 'com.google.android', module: 'android')
        }
        compile 'com.android.support:support-annotations:22.0.0'
        compile 'com.android.support:support-v4:22.0.0'
        compile 'com.android.support:support-v13:22.0.0'
        compile 'com.android.support:recyclerview-v7:22.0.0'
        compile 'com.android.support:cardview-v7:22.0.0'
        compile 'org.bitcoinj:icashj-core:0.12.3'
        compile 'com.google.protobuf:protobuf-java:2.5.0'
        compile 'com.google.guava:guava:16.0.1'
        compile 'com.google.zxing:core:3.2.0'
        compile 'org.slf4j:slf4j-api:1.7.12'
        compile('com.github.tony19:logback-android-classic:1.1.1-3') {
            exclude(group: 'com.google.android', module: 'android')
        }
        compile 'com.github.tony19:logback-android-core:1.1.1-3'
        compile 'com.google.code.findbugs:jsr305:2.0.3'
    }

    ext {
        archivesBaseName = 'bitcoin-wallet'
    }

    android {
        compileSdkVersion 'android-16'
        buildToolsVersion '22.0.1'

        lintOptions { abortOnError false }

        buildTypes {
            all {
                minifyEnabled true
                proguardFile 'proguard.cfg'
            }
            debug {
                debuggable true
            }
        }

        sourceSets {
            main {
                manifest.srcFile 'AndroidManifest.xml'
                java.srcDirs = ['src']
                res.srcDirs = ['res']
                assets.srcDirs = ['assets']
            }
        }

        packagingOptions {
            exclude 'lib/x86_64/darwin/libscrypt.dylib'
            exclude 'lib/x86_64/freebsd/libscrypt.so'
            exclude 'lib/x86_64/linux/libscrypt.so'
            exclude 'com/google/thirdparty/publicsuffix/PublicSuffixPatterns.gwt.xml'
            exclude 'com/google/thirdparty/publicsuffix/PublicSuffixType.gwt.xml'
            exclude 'org/bitcoinj/crypto/mnemonic/wordlist/english.txt'
            exclude 'org/bitcoinj/crypto/cacerts'
        }
    }
}
    task svgToPng(type: fr.avianey.androidsvgdrawable.gradle.SvgDrawableTask) {
        from = file('graphics')
        to = file('res')
        targetedDensities = ['hdpi', 'xhdpi', 'xxhdpi']
        outputFormat = 'PNG'
    }
